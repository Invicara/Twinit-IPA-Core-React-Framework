
/**
 * Overlay Views and Panels
 * --------------------------------------------------
 */



.overlay-view-ul {
  @include translate3d(-100%, -100%, 0);
}

.overlay-view-ur {
  @include translate3d(100%, -100%, 0);
}

.overlay-view-lr {
  @include translate3d(100%, 100%, 0);
}

.overlay-view {
  // Simple slide-in animations for use with CSSTransition
  &.overlay-view-enter {
    @include transition(all cubic-bezier(.1, .7, .1, 1) 400ms);
  }

  &.overlay-view-enter-active,
  &.overlay-view-enter-done {
    @include translate3d(0, 0, 0);
  }

  &.overlay-view-exit {
    @include transition(all ease-in-out 400ms);
    @include translate3d(0, 0, 0);
  }

  &.overlay-view-ul.overlay-view-exit-active,
  &.overlay-view-ul.overlay-view-exit-done {
    @include translate3d(-100%, -100%, 0);
  }

  &.overlay-view-ur.overlay-view-exit-active,
  &.overlay-view-ur.overlay-view-exit-done {
    @include translate3d(100%, -100%, 0);
  }

  &.overlay-view-lr.overlay-view-exit-active,
  &.overlay-view-lr.overlay-view-exit-done {
    @include translate3d(100%, 100%, 0);
  }
}

.overlay-panel {
  position: absolute;
  overflow: hidden;
  /* No background-color here to allow apps to set opacity on children
  background-color: $overlay-bg;
  */

  /*  These should not be needed.  Content should follow z-index of order of appearance.
  .scroll-content {
    z-index: $z-index-panel-scroll-content;
  }

  .bar-header {
    z-index: $z-index-panel-bar-header;
  }
  */

  // Simple slide-in animations for use with CSSTransition
  &.overlay-panel-enter {
    @include transition(all cubic-bezier(.1, .7, .1, 1) 400ms);
  }

  &.overlay-panel-enter-active,
  &.overlay-panel-enter-done {
    @include translate3d(0, 0, 0);
  }

  &.overlay-panel-exit {
    @include transition(all ease-in-out 400ms);
    @include translate3d(0, 0, 0);
  }

  &.overlay-panel-left.overlay-panel-exit-active,
  &.overlay-panel-left.overlay-panel-exit-done {
    @include translate3d(-100%, 0, 0);
  }

  &.overlay-panel-right.overlay-panel-exit-active,
  &.overlay-panel-right.overlay-panel-exit-done {
    @include translate3d(100%, 0, 0);
  }

  &.overlay-panel-bottom.overlay-panel-exit-active,
  &.overlay-panel-bottom.overlay-panel-exit-done {
    @include translate3d(0, 100%, 0);
  }
}

.overlay-panel-content {
  @include transform(none);
  box-shadow: $panel-side-shadow;
}

.overlay-panel-left {
  left: 0;
  //width: $overlay-panel-width;
  min-height: 100%;
  max-height: 100%;
  @include translate3d(-100%, 0, 0);
  min-width: fit-content;
}

.overlay-panel-right {
  right: 0;
  //width: $overlay-panel-width;
  min-height: 100%;
  max-height: 100%;
  @include translate3d(100%, 0, 0);
  min-width: fit-content;
}

.overlay-panel-bottom {
  bottom: 0;
  //height: $overlay-panel-bottom-height;
  min-height: fit-content;
  width: 100%;
  @include translate3d(0, 100%, 0);
}

.overlay-panel-top {
  top: 0;
  //height: $overlay-panel-top-height;
  min-height: fit-content;
  width: 100%;
  @include translate3d(0, -100%, 0);
}


.overlay-panel-animated {
  @include transition-transform($overlay-animation-speed ease);
}
